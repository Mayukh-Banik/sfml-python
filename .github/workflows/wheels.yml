name: Wheel
on:
  workflow_dispatch:
  pull_request:
  push:
jobs:
  build:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
   
    steps:
      - uses: actions/checkout@v4
     
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
         
      - name: Install build tools
        run: python -m pip install build cibuildwheel twine
       
      - name: Build sdist and wheels
        run: |
          python -m build --sdist
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_LINUX: |
            if command -v yum &> /dev/null; then
                yum install -y cmake ninja-build libXrandr-devel libXcursor-devel libXi-devel mesa-libGL-devel libX11-devel freetype-devel libXext-devel systemd-devel libogg-devel libvorbis-devel flac-devel openal-soft-devel
            elif command -v apt-get &> /dev/null; then
                apt-get update && apt-get install -y build-essential cmake ninja-build libxrandr-dev libxcursor-dev libxi-dev mesa-common-dev libx11-dev libfreetype6-dev libxext-dev libudev-dev libogg-dev libvorbis-dev libflac-dev libopenal-dev
            elif command -v apk &> /dev/null; then
                apk add --no-cache cmake ninja libxrandr-dev libxcursor-dev libxi-dev mesa-dev libx11-dev freetype-dev libxext-dev eudev-dev libogg-dev libvorbis-dev flac-dev openal-soft-dev
            fi
          CIBW_BUILD: "cp313-*"
          CIBW_SKIP: "*-win32 *-manylinux_i686"
          
      - name: Combine artifacts
        run: |
          mkdir -p dist_final
          cp dist/*.tar.gz dist_final/ 2>/dev/null || true
          cp wheelhouse/*.whl dist_final/
   
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist_final/
         
      - name: Publish to TestPyPI
        if: github.event_name == 'push'
        run: |
          python -m twine upload --repository testpypi dist_final/* -u __token__ -p ${{ secrets.TEST_PYPI_API_TOKEN }} --verbose
